// SPDX-License-Identifier: MIT
pragma solidity 0.8.7;

contract OpLogSpecific {
    function opLog4CustomDataSize() public payable {
        bytes32 topic1 = 0x3bf30f8500000000000000000000000000000000000000000000000000000000;
        address topic2 = 0x98F0f120de21a90f220B0027a9c70029Df9BBde4;
        uint topic3 = 0x40;
        uint topic4 = 0x60;

        // add random offset in memory
        bytes memory offsetData = hex"0000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000078e538905cf8410324e03a5a23c1c177a474d59b2b0000000000000000000000000000000000000000000000000000000000000044095ea7b300AAAAAA";
        bytes memory myData = hex"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001043bf30f850000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000078e538905cf8410324e03a5a23c1c177a474d59b2b0000000000000000000000000000000000000000000000000000000000000044095ea7b30000000000000000000000005040d46386e62f9f66246dbce6a9965e3bc013f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000";

        assembly {
            let dataPtr := add(myData, 32)
            let dataLength := mload(myData)
            log4(0x120, 0x164, topic1, topic2, topic3, topic4)
        }
    }
}
